1.3 选举规则
知道了上面这些有什么用呢？非常重要！因为选举 Leader 完全看的就是这几个值
  epoch
  写请求次数
  myid
优先级从上到下逐级比较，谁大谁就更有资格成为 Leader，当前级一样就比较下一级，直到分出胜负为止！
因为 myid 是不能重复的，所以最终是一定能分出胜负的！

村委会规定了几种状态用于表示当前办事处正处在的阶段：
  LOOKING，正在寻找 Leader，处于此阶段的办事处不能对外提供服务
  LEADING，当前办事处就是 Leader，可以对外提供服务
  FOLLOWING，当前办事处正在跟随 Leader，可以对外提供服务

2.2 开始选举
由于各个办事处刚准备好，所以彼此之间还没有通过信，又加上大家都是姓马的，心里面都是想当老大的，
所以每一个办事都会率先拟一张写着自己的选票发给其他办事处。主要有这些信息：
  sid：我是谁
  leader：我选谁
  state：我当前的状态
  epoch：我当前的 epoch
  zxid：我选择的 leader 的最大的事务编号

选举本身涉及到集群间的通信、节点自身的状态管理和状态变更，本身就是一个比较复杂的过程

2.6 小结
  .竞选 Leader 看的是 epoch、写请求操作数、myid 三个字段，依次比较谁大谁就更有资格成为 Leader
  .获选超过半数以上的办事处正式成为 Leader，修改自己状态为 LEADING
  .其他 Participant 修改为 FOLLOWING，Observer 则修改为 OBSERVING
  .如果集群中已经存在一个 Leader，其他办事处如果中途加入的话，直接跟随该 Leader 即可
  .还得提一句，如果当前可提供服务的节点已经不足半数以上了，那么这个选举就永远无法选出结果，
    每个节点都会一直处在 LOOKING 状态，整个办事处集群也就无法对外提供服务了

关于服务端之间的心跳检测：
  .服务端之间的心跳检测（PING）是由 Leader 发起的，发向所有集群中的其他节点
  .Follower 收到 PING 后会回一个PING 给 Leader 并带上自己这边的客户端会话数据
  .而 Leader 收到 Follower 的 PING 后，就会对这些客户端进行会话连接