里式替换原则是用来指导，继承关系中子类该如何设计的一个原则。理解里式替换原则，最
核心的就是理解“design by contract，按照协议来设计”这几个字。父类定义了函数
的“约定”（或者叫协议），那子类可以改变函数的内部实现逻辑，但不能改变函数原有
的“约定”。这里的约定包括：函数声明要实现的功能；对输入、输出、异常的约定；甚至
包括注释中所罗列的任何特殊说明。

理解这个原则，我们还要弄明白里式替换原则跟多态的区别。虽然从定义描述和代码实现上
来看，多态和里式替换有点类似，但它们关注的角度是不一样的。多态是面向对象编程的一
大特性，也是面向对象编程语言的一种语法。它是一种代码实现的思路。而里式替换是一种
设计原则，用来指导继承关系中子类该如何设计，子类的设计要保证在替换父类的时候，不
改变原有程序的逻辑及不破坏原有程序的正确性。