1.“基于接口而非实现编程”，这条原则的另一个表述方式，是“基于抽象而非实现编
  程”。后者的表述方式其实更能体现这条原则的设计初衷。我们在做软件开发的时候，一定
  要有抽象意识、封装意识、接口意识。越抽象、越顶层、越脱离具体某一实现的设计，越能
  提高代码的灵活性、扩展性、可维护性。

2. 我们在定义接口的时候，一方面，命名要足够通用，不能包含跟具体实现相关的字眼；
  另一方面，与特定实现有关的方法不要定义在接口中。

3.“基于接口而非实现编程”这条原则，不仅仅可以指导非常细节的编程开发，还能指导更
  加上层的架构设计、系统设计等。比如，服务端与客户端之间的“接口”设计、类库的“接
  口”设计。
